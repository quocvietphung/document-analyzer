version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: document-analyzer-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-changeme}
      MYSQL_DATABASE: ${DB_NAME:-documents}
      MYSQL_USER: ${DB_USERNAME:-docuser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-changeme}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - document-analyzer-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-changeme}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak for Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.6
    container_name: document-analyzer-keycloak
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN:-admin}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://mysql:3306/keycloak
      KC_DB_USERNAME: ${DB_USERNAME:-docuser}
      KC_DB_PASSWORD: ${DB_PASSWORD:-changeme}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8081
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
    ports:
      - "8081:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - document-analyzer-network
    command:
      - start-dev

  # Backend Spring Boot Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: document-analyzer-backend
    environment:
      # Database Configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-documents}
      DB_USERNAME: ${DB_USERNAME:-docuser}
      DB_PASSWORD: ${DB_PASSWORD:-changeme}
      
      # Azure Configuration
      AZURE_FORM_RECOGNIZER_ENDPOINT: ${AZURE_FORM_RECOGNIZER_ENDPOINT:-}
      AZURE_FORM_RECOGNIZER_KEY: ${AZURE_FORM_RECOGNIZER_KEY:-}
      AZURE_FORM_RECOGNIZER_MODEL_ID: ${AZURE_FORM_RECOGNIZER_MODEL_ID:-prebuilt-invoice}
      AZURE_STORAGE_ACCOUNT_NAME: ${AZURE_STORAGE_ACCOUNT_NAME:-}
      AZURE_STORAGE_ACCOUNT_KEY: ${AZURE_STORAGE_ACCOUNT_KEY:-}
      AZURE_STORAGE_CONTAINER_NAME: ${AZURE_STORAGE_CONTAINER_NAME:-documents}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-change-this-in-production-min-256-bits}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS:-3600000}
      JWT_REFRESH_EXPIRATION_MS: ${JWT_REFRESH_EXPIRATION_MS:-86400000}
      
      # Keycloak Configuration
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-document-analyzer}
      KEYCLOAK_RESOURCE: ${KEYCLOAK_RESOURCE:-document-analyzer-client}
      
      # Application Configuration
      SERVER_PORT: 8080
      CORS_ALLOWED_ORIGINS: http://localhost:4200,http://frontend:4200
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - document-analyzer-network
    volumes:
      - backend-uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Angular Application with SSR
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: document-analyzer-frontend
    environment:
      NODE_ENV: production
      API_BASE_URL: http://backend:8080
    ports:
      - "4200:4200"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - document-analyzer-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4200"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql-data:
    driver: local
  backend-uploads:
    driver: local

networks:
  document-analyzer-network:
    driver: bridge
